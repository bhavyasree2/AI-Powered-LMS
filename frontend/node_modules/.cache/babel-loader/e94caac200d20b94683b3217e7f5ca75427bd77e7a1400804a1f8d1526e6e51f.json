{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI-Powered-LMS\\\\frontend\\\\src\\\\pages\\\\Assignments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../components/ui/card';\nimport AnimatedBackground from '../components/ui/AnimatedBackground';\nimport Button from '../components/ui/button'; // Import Button\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Assignments = () => {\n  _s();\n  const [assignments] = useState([{\n    course: 'Mathematics',\n    status: 'Pending',\n    dueDate: '2024-03-01',\n    file: null\n  },\n  // Add file property\n  {\n    course: 'Physics',\n    status: 'Submitted',\n    dueDate: '2024-03-05',\n    file: 'physics_assignment.pdf'\n  }, {\n    course: 'Chemistry',\n    status: 'Graded',\n    dueDate: '2024-03-10',\n    file: 'chemistry_report.pdf'\n  }\n  // ... more assignments\n  ]);\n  const handleUpload = (index, file) => {\n    // In a real app, you would handle the file upload here (e.g., sending it to a server)\n    // For this example, we'll just update the state to show the file name\n    const updatedAssignments = [...assignments];\n    updatedAssignments[index].file = file.name;\n    // In a real application, you would also likely update the 'status' to 'Submitted' after a successful upload\n    // For this example, we'll keep the status as 'Pending'\n\n    // Simulate successful upload and change status:\n    updatedAssignments[index].status = 'Submitted';\n    setAssignments(updatedAssignments);\n    alert(`File \"${file.name}\" uploaded for ${assignments[index].course}!`); // Replace with your actual upload logic\n  };\n  const handleView = file => {\n    // In a real app, you would handle viewing the uploaded file (e.g., opening it in a new tab or downloading it)\n    if (file) {\n      alert(`Viewing file: ${file}`); // Replace with your actual view logic\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gradient-to-br from-blue-50 to-purple-50 min-h-screen relative\",\n    children: [/*#__PURE__*/_jsxDEV(AnimatedBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-8 text-gray-800\",\n        children: \"Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\",\n        children: assignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"p-6 bg-white/90 backdrop-blur-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-2xl font-bold text-gray-800 mb-2\",\n              children: assignment.course\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-2\",\n              children: [\"Due: \", assignment.dueDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2 mb-2\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-3 py-1 rounded-full text-sm ${assignment.status === 'Submitted' ? 'bg-green-100 text-green-800' : assignment.status === 'Graded' ? 'bg-blue-100 text-blue-800' : 'bg-yellow-100 text-yellow-800'}`,\n                children: assignment.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), assignment.status === 'Pending' ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: e => handleUpload(index, e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleView(assignment.file),\n              children: \"View Assignment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Assignments, \"2BXBa+Ab13CL9wc7h91iFZH8PHA=\");\n_c = Assignments;\nexport default Assignments;\nvar _c;\n$RefreshReg$(_c, \"Assignments\");","map":{"version":3,"names":["React","useState","Card","AnimatedBackground","Button","jsxDEV","_jsxDEV","Assignments","_s","assignments","course","status","dueDate","file","handleUpload","index","updatedAssignments","name","setAssignments","alert","handleView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","assignment","type","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["D:/AI-Powered-LMS/frontend/src/pages/Assignments.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '../components/ui/card';\r\nimport AnimatedBackground from '../components/ui/AnimatedBackground';\r\nimport Button from '../components/ui/button'; // Import Button\r\n\r\nconst Assignments = () => {\r\n  const [assignments] = useState([\r\n    { course: 'Mathematics', status: 'Pending', dueDate: '2024-03-01', file: null }, // Add file property\r\n    { course: 'Physics', status: 'Submitted', dueDate: '2024-03-05', file: 'physics_assignment.pdf' },\r\n    { course: 'Chemistry', status: 'Graded', dueDate: '2024-03-10', file: 'chemistry_report.pdf' },\r\n    // ... more assignments\r\n  ]);\r\n\r\n  const handleUpload = (index, file) => {\r\n    // In a real app, you would handle the file upload here (e.g., sending it to a server)\r\n    // For this example, we'll just update the state to show the file name\r\n    const updatedAssignments = [...assignments];\r\n    updatedAssignments[index].file = file.name;\r\n    // In a real application, you would also likely update the 'status' to 'Submitted' after a successful upload\r\n    // For this example, we'll keep the status as 'Pending'\r\n\r\n    // Simulate successful upload and change status:\r\n    updatedAssignments[index].status = 'Submitted';\r\n    setAssignments(updatedAssignments);\r\n\r\n    alert(`File \"${file.name}\" uploaded for ${assignments[index].course}!`); // Replace with your actual upload logic\r\n  };\r\n\r\n  const handleView = (file) => {\r\n    // In a real app, you would handle viewing the uploaded file (e.g., opening it in a new tab or downloading it)\r\n    if (file) {\r\n      alert(`Viewing file: ${file}`); // Replace with your actual view logic\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gradient-to-br from-blue-50 to-purple-50 min-h-screen relative\">\r\n      <AnimatedBackground />\r\n      <div className=\"relative z-10\">\r\n        <h1 className=\"text-4xl font-bold mb-8 text-gray-800\">Assignments</h1>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {assignments.map((assignment, index) => (\r\n            <Card key={index} className=\"p-6 bg-white/90 backdrop-blur-sm\">\r\n              <div className=\"flex flex-col\">\r\n                <h3 className=\"text-2xl font-bold text-gray-800 mb-2\">\r\n                  {assignment.course}\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-2\">Due: {assignment.dueDate}</p>\r\n                <div className=\"flex items-center gap-2 mb-2\"> {/* Added margin-bottom */}\r\n                  <span className={`px-3 py-1 rounded-full text-sm ${\r\n                    assignment.status === 'Submitted' ? 'bg-green-100 text-green-800' :\r\n                    assignment.status === 'Graded' ? 'bg-blue-100 text-blue-800' :\r\n                    'bg-yellow-100 text-yellow-800'\r\n                  }`}>\r\n                    {assignment.status}\r\n                  </span>\r\n                </div>\r\n                {assignment.status === 'Pending' ? (\r\n                  <input\r\n                    type=\"file\"\r\n                    onChange={(e) => handleUpload(index, e.target.files[0])}\r\n                  />\r\n                ) : (\r\n                  <Button onClick={() => handleView(assignment.file)}>View Assignment</Button>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assignments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}